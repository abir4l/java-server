!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Connection	src/main/java/app/Connection.java	/^public class Connection {$/;"	c
ConnectionUtils	src/main/java/util/ConnectionUtils.java	/^    public ConnectionUtils() {$/;"	m	class:ConnectionUtils
ConnectionUtils	src/main/java/util/ConnectionUtils.java	/^public class ConnectionUtils {$/;"	c
DIR	src/main/java/util/ConnectionUtils.java	/^    public static final Pattern DIR = Pattern.compile("\/.*(\\\\s|)");$/;"	f	class:ConnectionUtils
HTTP_METHODS	src/main/java/util/ConnectionUtils.java	/^    public static final String[] HTTP_METHODS = new String[]{"GET", "POST"};;$/;"	f	class:ConnectionUtils
HTTP_VERSION	src/main/java/util/ConnectionUtils.java	/^    private final String HTTP_VERSION;$/;"	f	class:ConnectionUtils	file:
HttpRequest	src/main/java/http/HttpRequest.java	/^public class HttpRequest {$/;"	c
NOT_FOUND	src/main/java/util/ConnectionUtils.java	/^    private final String NOT_FOUND;$/;"	f	class:ConnectionUtils	file:
OK	src/main/java/util/ConnectionUtils.java	/^    private final String OK;$/;"	f	class:ConnectionUtils	file:
Parser	src/main/java/util/Parser.java	/^public class Parser {$/;"	c
ROOT_DIR	src/main/java/util/ConnectionUtils.java	/^    private final String ROOT_DIR;$/;"	f	class:ConnectionUtils	file:
Server	src/main/java/Server.java	/^public class Server {$/;"	c
app	src/main/java/app/Connection.java	/^package app;$/;"	p
connectionInit	src/main/java/app/Connection.java	/^    private void connectionInit(){$/;"	m	class:Connection	file:
generateResponse	src/main/java/util/ConnectionUtils.java	/^    private String generateResponse(String code) {$/;"	m	class:ConnectionUtils	file:
getHTTPMethod	src/main/java/util/Parser.java	/^    private String getHTTPMethod(String method) {$/;"	m	class:Parser	file:
getHeader	src/main/java/util/Parser.java	/^    public String getHeader(String key){$/;"	m	class:Parser
getHeaders	src/main/java/http/HttpRequest.java	/^    public Map<String, String> getHeaders() {$/;"	m	class:HttpRequest
getHttpMethod	src/main/java/http/HttpRequest.java	/^    public String getHttpMethod() {$/;"	m	class:HttpRequest
getRequestHeaders	src/main/java/util/Parser.java	/^    private Map<String, String> getRequestHeaders(BufferedReader br) {$/;"	m	class:Parser	file:
getRequestMethod	src/main/java/util/Parser.java	/^    private HttpRequest getRequestMethod(BufferedReader br) throws IOException{$/;"	m	class:Parser	file:
getRequestPath	src/main/java/http/HttpRequest.java	/^    public String getRequestPath() {$/;"	m	class:HttpRequest
getRequestURI	src/main/java/util/Parser.java	/^    private String getRequestURI(String line) {$/;"	m	class:Parser	file:
getVersion	src/main/java/http/HttpRequest.java	/^    public String getVersion() {$/;"	m	class:HttpRequest
headers	src/main/java/http/HttpRequest.java	/^    private Map<String,String> headers;$/;"	f	class:HttpRequest	file:
headers	src/main/java/util/ConnectionUtils.java	/^    private Map<String, String> headers;$/;"	f	class:ConnectionUtils	file:
http	src/main/java/http/HttpRequest.java	/^package http;$/;"	p
httpMethod	src/main/java/http/HttpRequest.java	/^    private String httpMethod;$/;"	f	class:HttpRequest	file:
init	src/main/java/app/Connection.java	/^    public static void init(){$/;"	m	class:Connection
main	src/main/java/Server.java	/^    public static void main(String[] args) {$/;"	m	class:Server
parse	src/main/java/util/Parser.java	/^    public static void  parse(Socket connection){$/;"	m	class:Parser
readFile	src/main/java/util/ConnectionUtils.java	/^    private String readFile(File f) throws IOException {$/;"	m	class:ConnectionUtils	file:
readFromStream	src/main/java/util/ConnectionUtils.java	/^    private BufferedReader readFromStream(InputStream inputStream) {$/;"	m	class:ConnectionUtils	file:
readRequest	src/main/java/util/Parser.java	/^    private void readRequest(Socket connection) {$/;"	m	class:Parser	file:
request	src/main/java/util/Parser.java	/^    private HttpRequest request;$/;"	f	class:Parser	file:
requestPath	src/main/java/http/HttpRequest.java	/^    private String requestPath;$/;"	f	class:HttpRequest	file:
sendRespond	src/main/java/util/ConnectionUtils.java	/^    private void sendRespond(OutputStream outputStream, String file) {$/;"	m	class:ConnectionUtils	file:
setHeaders	src/main/java/http/HttpRequest.java	/^    public void setHeaders(Map<String, String> headers) {$/;"	m	class:HttpRequest
setHttpMethod	src/main/java/http/HttpRequest.java	/^    public void setHttpMethod(String httpMethod) {$/;"	m	class:HttpRequest
setRequestPath	src/main/java/http/HttpRequest.java	/^    public void setRequestPath(String requestPath) {$/;"	m	class:HttpRequest
setVersion	src/main/java/http/HttpRequest.java	/^    public void setVersion(String version) {$/;"	m	class:HttpRequest
socket	src/main/java/app/Connection.java	/^    private ServerSocket socket;$/;"	f	class:Connection	file:
util	src/main/java/util/ConnectionUtils.java	/^package util;$/;"	p
util	src/main/java/util/Parser.java	/^package util;$/;"	p
version	src/main/java/http/HttpRequest.java	/^    private String version;$/;"	f	class:HttpRequest	file:
